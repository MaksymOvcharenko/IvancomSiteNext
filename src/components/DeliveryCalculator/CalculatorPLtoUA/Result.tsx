/* eslint-disable react/no-unescaped-entities */
import SvgIcon from "@/components/SvgIcon";
import styles from "./styles/Result.module.css";
import { useTranslations } from "next-intl";

interface PackageDetail {
  id: number;
  cost: number;
  volumetricWeight: number;
  finalWeight: number;
  extraCharges: string[];
}

interface ResultProps {
  result: {
    totalWeight: number;
    insurance: number;
    totalCost: number;
    details: PackageDetail[];
  };
}

const Result: React.FC<ResultProps> = ({ result }) => {
  const t = useTranslations('Calculator');
  return (
    <div className={styles.result}>
      <h2>{t("result")}</h2>

      {result.details.map((pkg) => (
        <div key={pkg.id} className={styles.packageDetail}>
          <h3 className={styles.title}>{t("package")}{pkg.id}</h3>
          <p className={styles.info}><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M10 0C7.98777 0 6.33929 1.64848 6.33929 3.66071C6.33929 3.84377 6.35294 4.0238 6.37929 4.19984C6.51387 5.09916 5.88854 6.51786 4.97921 6.51786C4.56506 6.51786 4.19738 6.78287 4.06641 7.17576L0.877486 16.7425C0.445798 18.0376 1.40974 19.375 2.77485 19.375H17.2251C18.5903 19.375 19.5542 18.0376 19.1225 16.7425L15.9336 7.17576C15.8026 6.78287 15.4349 6.51786 15.0208 6.51786C14.1115 6.51786 13.4861 5.09916 13.6207 4.19984C13.6471 4.0238 13.6607 3.84377 13.6607 3.66071C13.6607 1.64848 12.0122 0 10 0ZM10 1.60714C11.1437 1.60714 12.0536 2.51705 12.0536 3.66071C12.0536 4.80438 11.1437 5.71429 10 5.71429C8.85634 5.71429 7.94643 4.80438 7.94643 3.66071C7.94643 2.51705 8.85634 1.60714 10 1.60714ZM6.32969 11.192C6.32969 10.9023 6.56454 10.6674 6.85424 10.6674H6.93992C7.18231 10.6674 7.3788 10.8639 7.3788 11.1063C7.3788 11.4954 7.84756 11.692 8.12517 11.4194L8.76639 10.7897C8.84624 10.7113 8.95369 10.6674 9.0656 10.6674C9.44779 10.6674 9.63753 11.1309 9.36501 11.3989L8.72406 12.0291C8.40817 12.3398 8.40715 12.8487 8.7218 13.1606L9.51292 13.9447C9.80615 14.2354 9.60033 14.7354 9.18745 14.7354C9.06565 14.7354 8.94876 14.6873 8.8622 14.6016L8.18224 13.9286C7.88443 13.6338 7.3788 13.8447 7.3788 14.2638C7.3788 14.5242 7.16763 14.7354 6.90715 14.7354H6.85424C6.56454 14.7354 6.32969 14.5006 6.32969 14.2108V11.192ZM11.6839 11.6156C11.8964 11.6156 12.0835 11.6574 12.2452 11.7409C12.3196 11.7794 12.3912 11.828 12.4598 11.8869C12.5422 11.9576 12.6894 11.9051 12.6894 11.7966C12.6894 11.7343 12.7399 11.6838 12.8022 11.6838H13.1798C13.4507 11.6838 13.6703 11.9033 13.6703 12.1742V14.4276C13.6703 14.918 13.5149 15.2922 13.2043 15.5502C12.8955 15.8099 12.4468 15.9398 11.8582 15.9398C11.6676 15.9398 11.4832 15.9253 11.3051 15.8962C11.1964 15.8783 11.0887 15.8551 10.9823 15.8269C10.8533 15.7927 10.7683 15.6728 10.7683 15.5393C10.7683 15.3004 11.0298 15.1496 11.2589 15.2174C11.2625 15.2184 11.2661 15.2195 11.2696 15.2205C11.4332 15.2695 11.5976 15.2941 11.7629 15.2941C12.0826 15.2941 12.317 15.2241 12.4659 15.0842C12.6149 14.9444 12.6894 14.7255 12.6894 14.4276C12.6894 14.3602 12.6002 14.3289 12.5532 14.3772C12.4567 14.4763 12.354 14.5539 12.2452 14.6101C12.0835 14.6936 11.8964 14.7354 11.6839 14.7355C11.3115 14.7355 11.0036 14.5893 10.7602 14.2968C10.5168 14.0025 10.395 13.6283 10.395 13.1742C10.395 12.7183 10.5168 12.345 10.7602 12.0543C11.0036 11.7619 11.3115 11.6157 11.6839 11.6156ZM12.0463 12.3186C11.8446 12.3186 11.6875 12.3931 11.5749 12.542C11.4622 12.691 11.4059 12.9018 11.4059 13.1742C11.4059 13.454 11.4604 13.6665 11.5694 13.8117C11.6784 13.9553 11.8374 14.0271 12.0463 14.0271C12.2497 14.027 12.4078 13.9525 12.5204 13.8036C12.6331 13.6546 12.6894 13.4448 12.6893 13.1742C12.6893 12.9017 12.633 12.691 12.5204 12.5421C12.4077 12.3931 12.2497 12.3186 12.0463 12.3186Z" fill="#05173B" />
</svg> {t("actualWeight")}: {pkg.finalWeight.toFixed(2)} {t("kg")}</p>
          <p className={styles.info}><svg width="20" height="22" viewBox="0 0 20 22" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M19.5762 4.60138L11.3942 0.101316C11.2734 0.0348512 11.1378 0 10.9999 0C10.862 0 10.7263 0.0348512 10.6055 0.101316L2.42357 4.60138C2.29529 4.67201 2.18831 4.77577 2.11381 4.90185C2.0393 5.02792 2 5.17168 2 5.31812C2 5.46456 2.0393 5.60831 2.11381 5.73439C2.18831 5.86046 2.29529 5.96422 2.42357 6.03485L10.1817 10.3017V19.0719L7.69764 17.7056L6.90891 19.1382L10.6055 21.1714C10.7263 21.2379 10.862 21.2727 10.9999 21.2727C11.1378 21.2727 11.2734 21.2379 11.3942 21.1714L19.5762 16.6714C19.7045 16.6008 19.8115 16.497 19.8861 16.3709C19.9606 16.2449 20 16.1011 20 15.9546V5.31812C20 5.17165 19.9606 5.02788 19.8861 4.9018C19.8115 4.77573 19.7045 4.67198 19.5762 4.60138Z" fill="#05173B" />
  <path d="M6.66667 10.6665H0V8.99988H6.66667V10.6665ZM8.33333 17.3332H1.66667V15.6665H8.33333V17.3332ZM10 13.9999H3.33333V12.3332H10V13.9999Z" fill="#05173B" />
</svg> {t("actualWeight")}: {pkg.volumetricWeight.toFixed(2)} {t("kg")}</p>
         {pkg.cost > 0 && (
  <p className={styles.info}>
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M14.1369 2.72825L15.9669 4.55825C18.6559 7.24825 19.9999 8.59225 19.9999 10.2622C19.9999 11.9332 18.6559 13.2772 15.9669 15.9662C13.2769 18.6562 11.9329 20.0002 10.2619 20.0002C8.59187 20.0002 7.24687 18.6562 4.55787 15.9672L2.72787 14.1372C1.18287 12.5912 0.409866 11.8192 0.122866 10.8162C-0.165134 9.81324 0.0808662 8.74825 0.572866 6.61925L0.855866 5.39125C1.26887 3.59925 1.47587 2.70325 2.08887 2.08925C2.70287 1.47625 3.59887 1.26925 5.39087 0.856245L6.61887 0.572245C8.74887 0.0812454 9.81287 -0.164755 10.8159 0.122245C11.8189 0.410245 12.5919 1.18325 14.1369 2.72825ZM9.14587 12.3282C8.47287 11.6562 8.47787 10.6902 8.88087 9.92525C8.7811 9.78114 8.73495 9.60664 8.75044 9.43205C8.76593 9.25747 8.84207 9.09382 8.96565 8.96953C9.08923 8.84523 9.25244 8.76815 9.42693 8.75166C9.60143 8.73516 9.77619 8.78031 9.92087 8.87924C10.2609 8.69924 10.6339 8.60325 11.0059 8.60725C11.2048 8.6091 11.3948 8.6899 11.5341 8.83186C11.6735 8.97383 11.7507 9.16533 11.7489 9.36425C11.747 9.56316 11.6662 9.75319 11.5242 9.89252C11.3823 10.0319 11.1908 10.1091 10.9919 10.1072C10.7603 10.1158 10.5415 10.2153 10.3829 10.3842C9.99587 10.7712 10.0969 11.1592 10.2059 11.2682C10.3159 11.3772 10.7029 11.4782 11.0899 11.0912C11.8739 10.3072 13.2279 10.0472 14.0949 10.9142C14.7679 11.5872 14.7629 12.5532 14.3599 13.3182C14.459 13.4624 14.5046 13.6366 14.4889 13.8109C14.4731 13.9851 14.3969 14.1483 14.2735 14.2723C14.1501 14.3963 13.9873 14.4733 13.8131 14.4899C13.639 14.5065 13.4645 14.4617 13.3199 14.3632C12.8711 14.6094 12.3506 14.6914 11.8479 14.5952C11.6529 14.5552 11.4819 14.4394 11.3724 14.2732C11.2628 14.107 11.2238 13.9042 11.2639 13.7092C11.3039 13.5143 11.4198 13.3433 11.5859 13.2337C11.7521 13.1242 11.9549 13.0852 12.1499 13.1252C12.3269 13.1622 12.6129 13.1042 12.8579 12.8592C13.2449 12.4712 13.1439 12.0842 13.0349 11.9752C12.9249 11.8662 12.5379 11.7652 12.1509 12.1522C11.3669 12.9362 10.0129 13.1962 9.14587 12.3282ZM8.01987 8.29325C8.20556 8.10749 8.35284 7.88698 8.45331 7.64431C8.55378 7.40163 8.60546 7.14154 8.60542 6.87889C8.60537 6.61624 8.55359 6.35617 8.45304 6.11353C8.35248 5.87089 8.20512 5.65043 8.01937 5.46475C7.83361 5.27906 7.6131 5.13177 7.37043 5.0313C7.12775 4.93083 6.86766 4.87915 6.60501 4.87919C6.34236 4.87924 6.08229 4.93102 5.83965 5.03157C5.59701 5.13213 5.37656 5.27949 5.19087 5.46525C4.81585 5.84039 4.60522 6.34915 4.60531 6.8796C4.60541 7.41005 4.81622 7.91873 5.19137 8.29375C5.56652 8.66876 6.07527 8.87939 6.60572 8.8793C7.13617 8.8792 7.64485 8.66839 8.01987 8.29325Z" fill="#05173B" />
    </svg> 
    {t("Cost")}: {pkg.cost.toFixed(2)} z≈Ç
  </p>
)}

          {pkg.extraCharges.length > 0 &&
            pkg.extraCharges.map((charge, index) => (
              <p key={index} className={styles.extraCharge} ><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path fill-rule="evenodd" clip-rule="evenodd" d="M14.1369 2.72825L15.9669 4.55825C18.6559 7.24825 19.9999 8.59225 19.9999 10.2622C19.9999 11.9332 18.6559 13.2772 15.9669 15.9662C13.2769 18.6562 11.9329 20.0002 10.2619 20.0002C8.59187 20.0002 7.24687 18.6562 4.55787 15.9672L2.72787 14.1372C1.18287 12.5912 0.409866 11.8192 0.122866 10.8162C-0.165134 9.81325 0.0808662 8.74825 0.572866 6.61925L0.855866 5.39125C1.26887 3.59925 1.47587 2.70325 2.08887 2.08925C2.70287 1.47625 3.59887 1.26925 5.39087 0.856245L6.61887 0.572245C8.74887 0.0812454 9.81287 -0.164755 10.8159 0.122245C11.8189 0.410245 12.5919 1.18325 14.1369 2.72825ZM9.14587 12.3282C8.47287 11.6562 8.47787 10.6902 8.88087 9.92525C8.7811 9.78114 8.73495 9.60664 8.75044 9.43205C8.76593 9.25747 8.84207 9.09382 8.96565 8.96953C9.08923 8.84523 9.25244 8.76815 9.42693 8.75166C9.60143 8.73516 9.77619 8.78031 9.92087 8.87924C10.2609 8.69924 10.6339 8.60325 11.0059 8.60725C11.2048 8.6091 11.3948 8.6899 11.5341 8.83186C11.6735 8.97383 11.7507 9.16533 11.7489 9.36425C11.747 9.56316 11.6662 9.75319 11.5242 9.89252C11.3823 10.0319 11.1908 10.1091 10.9919 10.1072C10.7603 10.1158 10.5415 10.2153 10.3829 10.3842C9.99587 10.7712 10.0969 11.1592 10.2059 11.2682C10.3159 11.3772 10.7029 11.4782 11.0899 11.0912C11.8739 10.3072 13.2279 10.0472 14.0949 10.9142C14.7679 11.5872 14.7629 12.5532 14.3599 13.3182C14.459 13.4624 14.5046 13.6366 14.4889 13.8109C14.4731 13.9851 14.3969 14.1483 14.2735 14.2723C14.1501 14.3963 13.9873 14.4733 13.8131 14.4899C13.639 14.5065 13.4645 14.4617 13.3199 14.3632C12.8711 14.6094 12.3506 14.6914 11.8479 14.5952C11.6529 14.5552 11.4819 14.4394 11.3724 14.2732C11.2628 14.107 11.2238 13.9042 11.2639 13.7092C11.3039 13.5143 11.4198 13.3433 11.5859 13.2337C11.7521 13.1242 11.9549 13.0852 12.1499 13.1252C12.3269 13.1622 12.6129 13.1042 12.8579 12.8592C13.2449 12.4712 13.1439 12.0842 13.0349 11.9752C12.9249 11.8662 12.5379 11.7652 12.1509 12.1522C11.3669 12.9362 10.0129 13.1962 9.14587 12.3282ZM8.01987 8.29325C8.20556 8.10749 8.35284 7.88698 8.45331 7.64431C8.55378 7.40163 8.60546 7.14154 8.60542 6.87889C8.60537 6.61624 8.55359 6.35617 8.45304 6.11353C8.35248 5.87089 8.20512 5.65043 8.01937 5.46475C7.83361 5.27906 7.6131 5.13177 7.37043 5.0313C7.12775 4.93083 6.86766 4.87915 6.60501 4.87919C6.34236 4.87924 6.08229 4.93102 5.83965 5.03157C5.59701 5.13213 5.37656 5.27949 5.19087 5.46525C4.81585 5.84039 4.60522 6.34915 4.60531 6.8796C4.60541 7.41005 4.81622 7.91873 5.19137 8.29375C5.56652 8.66876 6.07527 8.87939 6.60572 8.8793C7.13617 8.8792 7.64485 8.66839 8.01987 8.29325Z" fill="#FF543E" />
</svg>{charge}</p>
            ))}
        </div>
      ))}

      <div className={styles.total}>
        <p> {t("insurance")}: {result.insurance.toFixed(2)} z≈Ç</p>
        <p> {t("totalCost")}: {result.totalCost.toFixed(2)} z≈Ç</p>
      </div>
    </div>
  );
};

export default Result;

